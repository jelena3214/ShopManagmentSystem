version: "3"
services:
  adminer:
      image: adminer
      restart: always
      ports:
        - 8083:8080
      networks:
      - authorizationNet
      - storeNet
  authorizationDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123
    ports:
      - 3308:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 15s
      retries: 10
    volumes:
    - dbdataAuthorization:/var/lib/mysql
    networks:
      - authorizationNet
  authorizationDBinit:
    image: authorizationdbinit
    environment:
      - DATABASE_URL=authorizationDB
    depends_on:
      authorizationDB:
        condition: service_healthy
    networks:
      - authorizationNet
  authorization:
    image: authorization
    environment:
      - DATABASE_URL=authorizationDB
    depends_on:
      - authorizationDBinit
    ports:
    - 5002:5002
    networks:
      - authorizationNet
  storeDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123
    ports:
      - 3307:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 15s
      retries: 10
    volumes:
    - dbdataStore:/var/lib/mysql
    networks:
      - storeNet
  storeDBinit:
    image: storedbinit
    environment:
      - DATABASE_URL=storeDB
    depends_on:
      storeDB:
        condition: service_healthy
    networks:
      - storeNet
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    environment:
      - INIT_DAEMON_STEP=setup_spark
    networks:
      - storeNet
  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - 8081:8081
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    networks:
      - storeNet
  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - 8082:8081
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    networks:
      - storeNet
  sparkapp:
    image: spark
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
      - storeDBinit
    environment:
      - PRODUCTION=true
      - SOCKET_IP=0.0.0.0
      - SOCKET_PORT=9090
      - SPARKAPP_IP=sparkapp
      - DATABASE_IP=storeDB
      - ENABLE_INIT_DAEMON=false
    ports:
      - 5007:5007
    networks:
      - storeNet
  storeOwner:
    image: storeowner
    environment:
      - DATABASE_URL=storeDB
      - GANACHE_URL=http://ganache:8545
    depends_on:
      - storeDBinit
    ports:
    - 5004:5004
    networks:
      - storeNet
  storeCustomer:
    image: storecustomer
    environment:
      - DATABASE_URL=storeDB
      - GANACHE_URL=http://ganache:8545
    depends_on:
      - storeDBinit
    ports:
    - 5005:5005
    networks:
      - storeNet
  storeCourier:
    image: storecourier
    environment:
      - DATABASE_URL=storeDB
      - GANACHE_URL=http://ganache:8545
    depends_on:
      - storeDBinit
    ports:
    - 5006:5006
    networks:
      - storeNet
  ganache:
    image: trufflesuite/ganache-cli:latest
    ports:
      - 8545:8545
    environment:
      - GANACHE_URL=http://ganache:8545
    networks:
      - storeNet

volumes:
  dbdataAuthorization:
  dbdataStore:

networks:
  authorizationNet: 
  storeNet:
  